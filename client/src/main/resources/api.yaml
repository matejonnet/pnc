{
  "openapi": "3.0.1",
  "paths": {
    "/rest-new/build-configurations/{id}/dependencies": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Get the direct dependencies of the specified build config.",
        "operationId": "getDependencies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Adds a dependency to the specified build config.",
        "operationId": "addDependency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildConfigurationRef"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success but no content provided"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Gets all build configs.",
        "operationId": "getAll",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationPage"
                }
              }
            }
          },
          "204": {
            "description": "Success but no content provided"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Creates a new build config.",
        "operationId": "createNew",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildConfiguration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/supported-parameters": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Provides list of supported parameters.",
        "description": "Provides list of parameters supported by core, there can be also other parameters not known by core.",
        "operationId": "getSupportedParameters",
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Parameter"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/group-configurations": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Gets group configs associated with the specified build config.",
        "operationId": "getGroupConfigs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupConfigPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/revisions": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Gets audited revisions of this build config.",
        "operationId": "getRevisions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationRevisionPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Creates new build config revision.",
        "description": "This endpoint can be used for updating build config while returning the new revision.",
        "operationId": "createRevision",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildConfiguration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationRevisionSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/create-with-scm": {
      "post": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Starts a task of creating a new build config with a given SCM URL.",
        "description": "The given SCM URL is automatically analyzed and if it's an external URLthe content of the SCM repository is cloned into an internal repository.",
        "operationId": "createWithSCM",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildConfigWithSCMRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request was accepted for processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/revisions/{rev}/build": {
      "post": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Triggers a build of a build config in a specific revision.",
        "operationId": "triggerRevision",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rev",
            "in": "path",
            "description": "Revision number of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "temporaryBuild",
            "in": "query",
            "description": "Is it a temporary build or a standard build?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "forceRebuild",
            "in": "query",
            "description": "Should we force the rebuild?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "buildDependencies",
            "in": "query",
            "description": "Should we build also dependencies of this BuildConfiguration?",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "keepPodOnFailure",
            "in": "query",
            "description": "Should we keep the build container running, if the build fails?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "timestampAlignment",
            "in": "query",
            "description": "Should we add a timestamp during the alignment? Valid only for temporary builds.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "description": "Optional Callback URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request was accepted for processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSingleton"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/dependencies/{depId}": {
      "delete": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Removes a dependency from the specified build config.",
        "operationId": "removeDependency",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "depId",
            "in": "path",
            "description": "ID of the dependency",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Gets a specific build config.",
        "operationId": "getSpecific",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Updates an existing build config.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildConfiguration"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Entity successfully updated"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Removes a specific build config.",
        "operationId": "deleteSpecific",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Entity deleted"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/builds": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Get all builds associated with this build config.",
        "operationId": "getBuilds",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildsFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/revisions/{rev}": {
      "get": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Get specific audited revision of this build config.",
        "operationId": "getRevision",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "rev",
            "in": "path",
            "description": "Revision number of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationRevisionSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/clone": {
      "post": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Clones an existing build config.",
        "operationId": "clone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationSingleton"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/build-configurations/{id}/build": {
      "post": {
        "tags": [
          "Build Configs"
        ],
        "summary": "Triggers a build of a specific build config.",
        "operationId": "trigger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "temporaryBuild",
            "in": "query",
            "description": "Is it a temporary build or a standard build?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "forceRebuild",
            "in": "query",
            "description": "Should we force the rebuild?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "buildDependencies",
            "in": "query",
            "description": "Should we build also dependencies of this BuildConfiguration?",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "keepPodOnFailure",
            "in": "query",
            "description": "Should we keep the build container running, if the build fails?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "timestampAlignment",
            "in": "query",
            "description": "Should we add a timestamp during the alignment? Valid only for temporary builds.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "description": "Optional Callback URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request was accepted for processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSingleton"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/attributes": {
      "post": {
        "tags": [
          "Builds"
        ],
        "summary": "Add attribute to a specific build.",
        "operationId": "addAttribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Attribute key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Attribute value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success but no content provided"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Builds"
        ],
        "summary": "Remove attribute from a specific build.",
        "operationId": "removeAttribute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "Attribute key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Entity deleted"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets all builds.",
        "operationId": "getAll_1",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildsFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/cancel": {
      "post": {
        "tags": [
          "Builds"
        ],
        "summary": "Cancel running build.",
        "operationId": "cancel",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request was accepted for processing"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/dependency-graph": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets dependency graph for a build.",
        "operationId": "getDependencyGraph",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsGraph"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/logs/build": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets build logs for specific build.",
        "operationId": "getBuildLogs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "204": {
            "description": "Success but no content provided"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/brew-push": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Get Brew push result for specific build.",
        "operationId": "getPushResult",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPushResult"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Builds"
        ],
        "summary": "Push build to Brew.",
        "operationId": "push",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildPushRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request was accepted for processing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuildPushResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Builds"
        ],
        "summary": "Cancels push of build to Brew.",
        "operationId": "cancelPush",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "204"
          },
          "404": {
            "description": "Can not find any Brew push in progress."
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/brew-push/complete": {
      "post": {
        "tags": [
          "Internal",
          "Builds"
        ],
        "summary": "Notifies that the Brew push finished.",
        "operationId": "completePush",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildPushResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPushResult"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/logs/align": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets alignment logs for specific build.",
        "operationId": "getAlignLogs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "204": {
            "description": "Success but no content provided"
          },
          "500": {
            "description": "Server error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/artifacts/built": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets artifacts built in a specific build.",
        "operationId": "getBuiltArtifacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets specific build.",
        "operationId": "getSpecific_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Builds"
        ],
        "summary": "Delete specific temporary build.",
        "description": "The operation is async, for the result subscribe to 'build-records#delete' events with optional qualifier buildRecord.id.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request was accepted for processing"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/ssh-credentials/{id}": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets ssh credentials to log into the build pod.",
        "description": "This GET requests require authentication",
        "operationId": "getSshCredentials",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHCredentials"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/build-configuration-revision": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets the build config revision for specific build.",
        "operationId": "getBuildConfigurationRevision",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationRevisionSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/builds/{id}/artifacts/dependencies": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Gets dependency artifacts for specific build.",
        "operationId": "getDependencyArtifacts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/debug/build-queue": {
      "get": {
        "tags": [
          "Internal"
        ],
        "operationId": "getBuildQueueInfo",
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/rest-new/debug/mq-send-dummy-message": {
      "post": {
        "tags": [
          "Internal"
        ],
        "operationId": "sendDummyMessageToQueue",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/rest-new/environments": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Gets all environments.",
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildEnvironmentPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/environments/{id}": {
      "get": {
        "tags": [
          "Environments"
        ],
        "summary": "Gets a specific environment.",
        "operationId": "getSpecific_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the environment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildEnvironmentSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-builds": {
      "get": {
        "tags": [
          "Group Builds"
        ],
        "summary": "Gets all group builds.",
        "operationId": "getAll_3",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupBuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-builds/{id}/cancel": {
      "post": {
        "tags": [
          "Group Builds"
        ],
        "summary": "Cancel all builds running in the build group.",
        "operationId": "cancel_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request was accepted for processing"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-builds/{id}/dependency-graph": {
      "get": {
        "tags": [
          "Group Builds"
        ],
        "summary": "Gets builds dependency graph for a build group.",
        "operationId": "getDependencyGraph_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildsGraph"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-builds/{id}/builds": {
      "get": {
        "tags": [
          "Group Builds"
        ],
        "summary": "Gets the builds associated with this group build.",
        "operationId": "getBuilds_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildsFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-builds/{id}": {
      "get": {
        "tags": [
          "Group Builds"
        ],
        "summary": "Gets specific group build.",
        "operationId": "getSpecific_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupBuildSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group Builds"
        ],
        "summary": "Delete specific temporary group build.",
        "description": "The operation is async, for the result subscribe to 'build-config-set-records#delete' events with optional qualifier buildRecord.id.",
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group build",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request was accepted for processing"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-builds/brew-push": {
      "post": {
        "tags": [
          "Group Builds"
        ],
        "summary": "Push all perfomred builds from this group build to Brew.",
        "operationId": "brewPush",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupBuildPushRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request was accepted for processing"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-configuration/{id}/build-configurations": {
      "get": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Gets the build configs for the group config.",
        "operationId": "getConfigurations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Adds a build config to the group config.",
        "operationId": "addConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success with results"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-configuration": {
      "get": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Gets all group configs.",
        "operationId": "getAll_4",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupConfigPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Creates a new group config.",
        "operationId": "createNew",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupConfigSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-configuration/{id}": {
      "get": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Gets a specific group config.",
        "operationId": "getSpecific_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupConfigSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Updates an existing group config.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Entity successfully updated"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Removes a specific group config.",
        "operationId": "deleteSpecific",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success but no content provided"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-configuration/{id}/group-builds": {
      "get": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Get all group builds associated with this group config.",
        "operationId": "getAllGroupBuilds",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupBuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-configuration/{id}/builds": {
      "get": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Gets all builds associated with the contained build configs.",
        "operationId": "getBuilds_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildsFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-configuration/{id}/build-configurations/{configId}": {
      "delete": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Removes a build config from the specified group config.",
        "operationId": "removeConfiguration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "configId",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/group-configuration/{id}/build": {
      "post": {
        "tags": [
          "Group Configs"
        ],
        "summary": "Builds the build configs in the group config.",
        "operationId": "trigger_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the group config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "temporaryBuild",
            "in": "query",
            "description": "Is it a temporary build or a standard build?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "forceRebuild",
            "in": "query",
            "description": "Should we force the rebuild of all build configurations?",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "timestampAlignment",
            "in": "query",
            "description": "Should we add a timestamp during the alignment? Valid only for temporary builds.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "callbackUrl",
            "in": "query",
            "description": "Optional Callback URL",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupBuildRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request was accepted for processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupBuildSingleton"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets all products.",
        "operationId": "getAll_5",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Creates a new product.",
        "operationId": "createNew",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/products/{id}/versions": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all versions for a specific product.",
        "operationId": "getProductVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVersionPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets a specific product.",
        "operationId": "getSpecific_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Updates an existing product.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/products/{id}/build-configurations": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets all build configs for a specific product.",
        "operationId": "getBuildConfigurations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-milestones": {
      "post": {
        "tags": [
          "Product Milestones"
        ],
        "summary": "Creates a new product milestone.",
        "operationId": "createNew",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMilestone"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMilestoneSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-milestones/{id}/close": {
      "post": {
        "tags": [
          "Product Milestones"
        ],
        "summary": "Close a product milestone.",
        "operationId": "closeMilestone",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product milestone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMilestone"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request was accepted for processing"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product Milestones"
        ],
        "summary": "Cancel product milestone close process.",
        "operationId": "cancelMilestoneClose",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product milestone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-milestones/{id}": {
      "get": {
        "tags": [
          "Product Milestones"
        ],
        "summary": "Gets a specific product milestone.",
        "operationId": "getSpecific_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product milestone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMilestoneSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product Milestones"
        ],
        "summary": "Updates an existing product milestone.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product milestone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductMilestone"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-milestones/{id}/builds": {
      "get": {
        "tags": [
          "Product Milestones"
        ],
        "summary": "Gets builds performed during a product milestone cycle.",
        "operationId": "getPerformedBuilds",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product milestone",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-releases": {
      "post": {
        "tags": [
          "Product Releases"
        ],
        "summary": "Creates a new product release.",
        "operationId": "createNew_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRelease"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReleaseSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-releases/support-levels": {
      "get": {
        "tags": [
          "Product Releases"
        ],
        "summary": "Gets all product releases support levels.",
        "operationId": "getAllSupportLevel",
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/null"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-releases/{id}": {
      "get": {
        "tags": [
          "Product Releases"
        ],
        "summary": "Gets a specific product release.",
        "operationId": "getSpecific_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product release",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReleaseSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product Releases"
        ],
        "summary": "Updates an existing product release.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product release",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRelease"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Entity successfully updated"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-versions/{id}/group-configurations": {
      "get": {
        "tags": [
          "Product Versions"
        ],
        "summary": "Gets group configs associated with a specific product version.",
        "operationId": "getGroupConfigurations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupConfigPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-versions/{id}": {
      "get": {
        "tags": [
          "Product Versions"
        ],
        "summary": "Gets a specific product version.",
        "operationId": "getSpecific_8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVersionSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product Versions"
        ],
        "summary": "Updates an existing product version.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductVersion"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "204"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-versions/{id}/milestones": {
      "get": {
        "tags": [
          "Product Versions"
        ],
        "summary": "Gets all product milestones of a specific product version.",
        "operationId": "getMilestones",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductMilestonePage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-versions/{id}/build-configurations": {
      "get": {
        "tags": [
          "Product Versions"
        ],
        "summary": "Gets all build configs in a specific product version.",
        "operationId": "getBuildConfigurations_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-versions/{id}/releases": {
      "get": {
        "tags": [
          "Product Versions"
        ],
        "summary": "Gets all product releases of a specific product version.",
        "operationId": "getReleases",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product version",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductReleasePage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/product-versions": {
      "post": {
        "tags": [
          "Product Versions"
        ],
        "summary": "Creates a new product version.",
        "operationId": "createNewProductVersion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductVersion"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductVersionSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets all projects.",
        "operationId": "getAll_6",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates a new project.",
        "operationId": "createNew_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Entity successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/projects/{id}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets a specific project.",
        "operationId": "getSpecific_9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates an existing project.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Entity successfully updated"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Projects"
        ],
        "summary": "Removes a specific project and associated build configs.",
        "operationId": "deleteSpecific",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the project",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Entity deleted"
          },
          "404": {
            "description": "Can not find specified result"
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/projects/{id}/builds": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get all builds associated with a specific project.",
        "operationId": "getBuilds_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the build config",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildsFilterParameters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/projects/{id}/build-configurations": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Gets all build configs associated with the specified project.",
        "operationId": "getBuildConfigurations_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Project Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildConfigurationPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/repository-configurations/create-and-sync": {
      "post": {
        "tags": [
          "SCM Repositories"
        ],
        "summary": "Creates a new SCM repository.",
        "description": "If the given URL is external, it does create the repository in the scm server.",
        "operationId": "createNew_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAndSyncSCMRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Request was accepted for processing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryConfigurationSingleton"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/repository-configurations": {
      "get": {
        "tags": [
          "SCM Repositories"
        ],
        "summary": "Gets all SCM repositories.",
        "operationId": "getAll_7",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "description": "Url to search for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search-url",
            "in": "query",
            "description": "Url part to search for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryConfigurationPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/repository-configurations/{id}": {
      "get": {
        "tags": [
          "SCM Repositories"
        ],
        "summary": "Gets a specific SCM repository.",
        "operationId": "getSpecific_10",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the SCM repository",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryConfigurationSingleton"
                }
              }
            }
          },
          "404": {
            "description": "Can not find specified result"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "SCM Repositories"
        ],
        "summary": "Updates an existing SCM repository.",
        "operationId": "update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the SCM repository",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepositoryConfiguration"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Entity successfully updated"
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict while saving an entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/users/{id}/builds": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets all builds triggered by specific user.",
        "operationId": "getBuilds_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Page Index",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Pagination size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting RSQL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "RSQL Query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/rest-new/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Gets logged user.",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "Success with results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSingleton"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GroupBuildSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/GroupBuild"
          }
        }
      },
      "ProductPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        }
      },
      "GroupConfigurationRef": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GroupBuildPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupBuild"
            }
          }
        }
      },
      "BuildConfigurationRevisionRef": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "rev": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "buildScript": {
            "type": "string"
          },
          "scmRevision": {
            "type": "string"
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTime": {
            "type": "integer",
            "format": "int64"
          },
          "buildType": {
            "type": "string",
            "enum": [
              "MVN",
              "NPM"
            ]
          }
        }
      },
      "BuildsGraph": {
        "type": "object",
        "properties": {
          "vertices": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/VertexBuild"
            }
          },
          "edges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EdgeBuild"
            }
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "SSHCredentials": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "BuildConfigWithSCMRequest": {
        "type": "object",
        "properties": {
          "scmUrl": {
            "type": "string"
          },
          "preBuildSyncEnabled": {
            "type": "boolean"
          },
          "buildConfiguration": {
            "$ref": "#/components/schemas/BuildConfiguration"
          }
        }
      },
      "Product": {
        "required": [
          "abbreviation",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "abbreviation": {
            "pattern": "[a-zA-Z0-9-]+",
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "pgmSystemName": {
            "type": "string"
          },
          "productVersions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVersionRef"
            }
          }
        }
      },
      "ProductRef": {
        "required": [
          "abbreviation",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "abbreviation": {
            "pattern": "[a-zA-Z0-9-]+",
            "type": "string"
          },
          "productCode": {
            "type": "string"
          },
          "pgmSystemName": {
            "type": "string"
          }
        }
      },
      "ProductVersionPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductVersion"
            }
          }
        }
      },
      "BuildPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Build"
            }
          }
        }
      },
      "Build": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "submitTime": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "NEW",
              "ENQUEUED",
              "WAITING_FOR_DEPENDENCIES",
              "BUILDING",
              "BUILD_COMPLETED",
              "DONE",
              "REJECTED",
              "REJECTED_FAILED_DEPENDENCIES",
              "REJECTED_ALREADY_BUILT",
              "SYSTEM_ERROR",
              "DONE_WITH_ERRORS",
              "CANCELLED"
            ]
          },
          "buildContentId": {
            "type": "string"
          },
          "temporaryBuild": {
            "type": "boolean"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectRef"
          },
          "repository": {
            "$ref": "#/components/schemas/RepositoryConfiguration"
          },
          "buildEnvironmentId": {
            "$ref": "#/components/schemas/BuildEnvironment"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "buildConfigurationAudited": {
            "$ref": "#/components/schemas/BuildConfigurationRevisionRef"
          },
          "dependentBuildIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "dependencyBuildIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ArtifactPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artifact"
            }
          }
        }
      },
      "ProductSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Product"
          }
        }
      },
      "BuildConfigurationPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildConfiguration"
            }
          }
        }
      },
      "BuildConfigurationRevision": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "rev": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "buildScript": {
            "type": "string"
          },
          "scmRevision": {
            "type": "string"
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTime": {
            "type": "integer",
            "format": "int64"
          },
          "buildType": {
            "type": "string",
            "enum": [
              "MVN",
              "NPM"
            ]
          },
          "repositoryConfiguration": {
            "$ref": "#/components/schemas/RepositoryConfiguration"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectRef"
          },
          "environment": {
            "$ref": "#/components/schemas/BuildEnvironment"
          },
          "genericParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BuildConfigurationSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/BuildConfiguration"
          }
        }
      },
      "RepositoryConfigurationPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepositoryConfiguration"
            }
          }
        }
      },
      "RepositoryConfiguration": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "internalUrl": {
            "type": "string"
          },
          "internalUrlNormalized": {
            "type": "string"
          },
          "externalUrl": {
            "type": "string"
          },
          "externalUrlNormalized": {
            "type": "string"
          },
          "preBuildSyncEnabled": {
            "type": "boolean"
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "taskId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BuildConfigurationRef": {
        "required": [
          "buildType",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "pattern": "^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*(?<!\\.git)$",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "buildScript": {
            "type": "string"
          },
          "scmRevision": {
            "type": "string"
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTime": {
            "type": "integer",
            "format": "int64"
          },
          "archived": {
            "type": "boolean"
          },
          "buildType": {
            "type": "string",
            "enum": [
              "MVN",
              "NPM"
            ]
          }
        }
      },
      "BuildSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Build"
          }
        }
      },
      "ProductVersionRef": {
        "required": [
          "id",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "pattern": "^[0-9]+\\.[0-9]+$",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "EdgeBuild": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "cost": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BuildPushRequest": {
        "required": [
          "buildId"
        ],
        "type": "object",
        "properties": {
          "tagPrefix": {
            "type": "string"
          },
          "buildId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GroupConfiguration": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "productVersion": {
            "$ref": "#/components/schemas/ProductVersionRef"
          },
          "buildConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildConfigurationRef"
            }
          }
        }
      },
      "ProductMilestoneSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ProductMilestone"
          }
        }
      },
      "ProductReleasePage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRelease"
            }
          }
        }
      },
      "Project": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "issueTrackerUrl": {
            "type": "string"
          },
          "projectUrl": {
            "type": "string"
          },
          "repositoryConfiguration": {
            "$ref": "#/components/schemas/RepositoryConfiguration"
          },
          "buildConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildConfigurationRef"
            }
          }
        }
      },
      "BuildEnvironment": {
        "required": [
          "id",
          "systemImageId",
          "systemImageType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "systemImageRepositoryUrl": {
            "type": "string"
          },
          "systemImageId": {
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "systemImageType": {
            "type": "string",
            "enum": [
              "DOCKER_IMAGE",
              "VIRTUAL_MACHINE_RAW",
              "VIRTUAL_MACHINE_QCOW2",
              "LOCAL_WORKSPACE"
            ]
          },
          "deprecated": {
            "type": "boolean"
          }
        }
      },
      "CreateAndSyncSCMRequest": {
        "type": "object",
        "properties": {
          "scmUrl": {
            "type": "string"
          },
          "preBuildSyncEnabled": {
            "type": "boolean"
          }
        }
      },
      "ProjectRef": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "issueTrackerUrl": {
            "type": "string"
          },
          "projectUrl": {
            "type": "string"
          }
        }
      },
      "GroupConfigPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupConfiguration"
            }
          }
        }
      },
      "ArtifactImportError": {
        "type": "object",
        "properties": {
          "artifactId": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          }
        }
      },
      "BuildEnvironmentSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/BuildEnvironment"
          }
        }
      },
      "ProductMilestonePage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMilestone"
            }
          }
        }
      },
      "User": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "VertexBuild": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "dataType": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Build"
          }
        }
      },
      "BuildPushResult": {
        "required": [
          "buildRecordId",
          "id",
          "log",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "buildRecordId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "SYSTEM_ERROR",
              "CANCELED"
            ]
          },
          "log": {
            "type": "string"
          },
          "artifactImportErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArtifactImportError"
            }
          },
          "brewBuildId": {
            "type": "integer",
            "format": "int32"
          },
          "brewBuildUrl": {
            "type": "string"
          }
        }
      },
      "ProjectPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          }
        }
      },
      "ProductVersion": {
        "required": [
          "id",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "pattern": "^[0-9]+\\.[0-9]+$",
            "type": "string"
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "productId": {
            "$ref": "#/components/schemas/ProductRef"
          },
          "currentProductMilestone": {
            "$ref": "#/components/schemas/ProductMilestoneRef"
          },
          "productMilestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductMilestoneRef"
            }
          },
          "productReleases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductReleaseRef"
            }
          },
          "buildConfigurationSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupConfigurationRef"
            }
          },
          "buildConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildConfigurationRef"
            }
          }
        }
      },
      "BuildConfigurationRevisionSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/BuildConfigurationRevision"
          }
        }
      },
      "BuildConfiguration": {
        "required": [
          "buildType",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "pattern": "^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*(?<!\\.git)$",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "buildScript": {
            "type": "string"
          },
          "scmRevision": {
            "type": "string"
          },
          "creationTime": {
            "type": "integer",
            "format": "int64"
          },
          "modificationTime": {
            "type": "integer",
            "format": "int64"
          },
          "archived": {
            "type": "boolean"
          },
          "buildType": {
            "type": "string",
            "enum": [
              "MVN",
              "NPM"
            ]
          },
          "repositoryConfiguration": {
            "$ref": "#/components/schemas/RepositoryConfiguration"
          },
          "project": {
            "$ref": "#/components/schemas/ProjectRef"
          },
          "environment": {
            "$ref": "#/components/schemas/BuildEnvironment"
          },
          "dependencyIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "productVersion": {
            "$ref": "#/components/schemas/ProductVersionRef"
          },
          "groupConfigs": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupConfigurationRef"
            }
          },
          "genericParameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ProductReleaseRef": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "string"
          },
          "supportLevel": {
            "type": "string",
            "enum": [
              "UNRELEASED",
              "EARLYACCESS",
              "SUPPORTED",
              "EXTENDED_SUPPORT",
              "EOL"
            ]
          },
          "releaseDate": {
            "type": "integer",
            "format": "int64"
          },
          "downloadUrl": {
            "type": "string"
          },
          "issueTrackerUrl": {
            "type": "string"
          }
        }
      },
      "GroupConfigSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/GroupConfiguration"
          }
        }
      },
      "BuildAttributeParameters": {
        "type": "object"
      },
      "BuildEnvironmentPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildEnvironment"
            }
          }
        }
      },
      "BuildsFilterParameters": {
        "type": "object"
      },
      "ProductMilestone": {
        "required": [
          "id",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?\\.[\\w]+$",
            "type": "string"
          },
          "endDate": {
            "type": "integer",
            "format": "int64"
          },
          "startingDate": {
            "type": "integer",
            "format": "int64"
          },
          "plannedEndDate": {
            "type": "integer",
            "format": "int64"
          },
          "downloadUrl": {
            "type": "string"
          },
          "issueTrackerUrl": {
            "type": "string"
          },
          "productVersion": {
            "$ref": "#/components/schemas/ProductVersionRef"
          },
          "performedBuilds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "distributedArtifactIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "productRelease": {
            "$ref": "#/components/schemas/ProductReleaseRef"
          }
        }
      },
      "TargetRepositoryRef": {
        "required": [
          "id",
          "identifier",
          "repositoryPath",
          "repositoryType",
          "temporaryRepo"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "temporaryRepo": {
            "type": "boolean"
          },
          "identifier": {
            "type": "string"
          },
          "repositoryType": {
            "type": "string",
            "enum": [
              "MAVEN",
              "NPM",
              "COCOA_POD",
              "GENERIC_PROXY"
            ]
          },
          "repositoryPath": {
            "type": "string"
          }
        }
      },
      "GroupBuild": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "integer",
            "format": "int64"
          },
          "endTime": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILED",
              "UNSTABLE",
              "BUILDING",
              "REJECTED",
              "CANCELLED",
              "SYSTEM_ERROR",
              "UNKNOWN",
              "NONE"
            ]
          },
          "temporaryBuild": {
            "type": "boolean"
          },
          "groupConfig": {
            "$ref": "#/components/schemas/GroupConfigurationRef"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "productVersion": {
            "$ref": "#/components/schemas/ProductVersionRef"
          },
          "buildIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ProductMilestoneRef": {
        "required": [
          "id",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "pattern": "^[0-9]+\\.[0-9]+(\\.[0-9]+)?\\.[\\w]+$",
            "type": "string"
          },
          "endDate": {
            "type": "integer",
            "format": "int64"
          },
          "startingDate": {
            "type": "integer",
            "format": "int64"
          },
          "plannedEndDate": {
            "type": "integer",
            "format": "int64"
          },
          "downloadUrl": {
            "type": "string"
          },
          "issueTrackerUrl": {
            "type": "string"
          }
        }
      },
      "RepositoryConfigurationSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/RepositoryConfiguration"
          }
        }
      },
      "BuildConfigurationRevisionPage": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildConfigurationRevision"
            }
          }
        }
      },
      "Artifact": {
        "required": [
          "id",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "identifier": {
            "type": "string"
          },
          "artifactQuality": {
            "type": "string",
            "enum": [
              "NEW",
              "VERIFIED",
              "TESTED",
              "DEPRECATED",
              "BLACKLISTED",
              "DELETED",
              "TEMPORARY"
            ]
          },
          "md5": {
            "type": "string"
          },
          "sha1": {
            "type": "string"
          },
          "sha256": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "deployPath": {
            "type": "string"
          },
          "importDate": {
            "type": "integer",
            "format": "int64"
          },
          "originUrl": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "deployUrl": {
            "type": "string"
          },
          "publicUrl": {
            "type": "string"
          },
          "targetRepository": {
            "$ref": "#/components/schemas/TargetRepositoryRef"
          },
          "buildIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "dependantBuildIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "details": {
            "type": "object"
          }
        }
      },
      "GroupBuildPushRequest": {
        "required": [
          "groupBuildId"
        ],
        "type": "object",
        "properties": {
          "tagPrefix": {
            "type": "string"
          },
          "groupBuildId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GroupBuildRequest": {
        "type": "object",
        "properties": {
          "buildConfigurationRevisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BuildConfigurationRevisionRef"
            }
          }
        }
      },
      "ProjectSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/Project"
          }
        }
      },
      "ProductRelease": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "string"
          },
          "supportLevel": {
            "type": "string",
            "enum": [
              "UNRELEASED",
              "EARLYACCESS",
              "SUPPORTED",
              "EXTENDED_SUPPORT",
              "EOL"
            ]
          },
          "releaseDate": {
            "type": "integer",
            "format": "int64"
          },
          "downloadUrl": {
            "type": "string"
          },
          "issueTrackerUrl": {
            "type": "string"
          },
          "repositoryConfiguration": {
            "$ref": "#/components/schemas/RepositoryConfiguration"
          },
          "productVersion": {
            "$ref": "#/components/schemas/ProductVersionRef"
          },
          "productMilestone": {
            "$ref": "#/components/schemas/ProductMilestoneRef"
          }
        }
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UserSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "ProductReleaseSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ProductRelease"
          }
        }
      },
      "ProductVersionSingleton": {
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/ProductVersion"
          }
        }
      }
    }
  }
}
